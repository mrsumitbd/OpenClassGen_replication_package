class UploadedFileRelations(object):
    '''
    Contains run method that will be called via project upload file post-processor.
    '''

    def __init__(self, activity):
        '''
        :param activity: CopyActivity: info about the activity associated with the files we are uploading
        '''
        self.activity = activity

    def run(self, data_service, file_details):
        '''
        Attach a remote file to activity with was generated by relationship.
        :param data_service: DataServiceApi: service used to attach relationship
        :param file_details: dict: response from DukeDS POST to /files/ containing current_version id
        '''
        used_entity_id = self._lookup_used_entity_id(file_details)
        if used_entity_id:
            current_version_id = file_details.get('current_version', {}).get('id')
            if current_version_id:
                data_service.create_used_relation(
                    activity_id=self.activity.id,
                    entity_id=used_entity_id,
                    generated_entity_id=current_version_id
                )

    def _lookup_used_entity_id(self, file_details):
        '''
        Return the file_version_id associated with the path from file_details.
        The file_version_id is looked up from a dictionary in the activity.
        :param file_details: dict: response from DukeDS POST to /files/
        :return: str: file_version_id uuid
        '''
        file_path = file_details.get('name')
        if hasattr(self.activity, 'file_version_map') and file_path:
            return self.activity.file_version_map.get(file_path)
        return None